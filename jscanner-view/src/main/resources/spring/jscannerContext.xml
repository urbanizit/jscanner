<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Spring and JPA driven web application example
  
  ByteSource Technology Consulting (www.bytesource.net)
 -->
 
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-lazy-init="true" >

    <context:annotation-config/>
    
    <context:spring-configured/>
    
    <!-- automatically detecting 'stereotyped' classes (by @Service, @Repository) and 
         registering corresponding BeanDefinitions -->
    <context:component-scan base-package="org.urbanizit.jscanner" />

   
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
			</bean>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/jscanner-08032012" />
		<property name="username" value="jscanner" />
		<property name="password" value="jscanner" />
	</bean>

    <!-- supports Spring's exception translation for @Repository annotated classes--> 
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <!-- put transactional advice on any class or method that has the @Transactional annotation on it -->
    <tx:annotation-driven /> <!--  mode="aspectj" -->
    
</beans>